-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Experimental package for a language implemented by Haskell
--   
--   This package is only for experiment to implement CUTE Lang. Do not use
--   this any other purpose. This package would introduce breaking changes
--   without any notifications.
@package prettyprinter-minicute
@version 0.1.0.0


-- | Additional prettyprinter functions for miniCUTE compiler
module Data.Text.Prettyprint.Doc.Minicute

-- | <a>PrettyMC</a> (which stands for Pretty MiniCute) class is a
--   variation class of <a>Pretty</a> for miniCUTE types, which require a
--   precedence to print prettily.
class PrettyMC a
prettyMC :: PrettyMC a => Int -> a -> Doc ann
prettyListMC :: PrettyMC a => Int -> [a] -> Doc ann
prettyMC0 :: PrettyMC a => a -> Doc ann
prettyListMC0 :: PrettyMC a => [a] -> Doc ann

-- | <tt>prettyIndent doc</tt> make a document indented with an appropriate
--   size.
prettyIndent :: Doc ann -> Doc ann
prettyWrappedIf :: Bool -> (Doc ann -> Doc ann) -> Doc ann -> Doc ann
makePrettyMCFromPretty :: Name -> DecsQ
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Types.Bool
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Types.Char
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Types.Double
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Types.Float
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Types.Int
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Int.Int8
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Int.Int16
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Int.Int32
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Int.Int64
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Integer.Type.Integer
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Natural.Natural
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Types.Word
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Word.Word8
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Word.Word16
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Word.Word32
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC GHC.Word.Word64
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC ()
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC Data.Void.Void
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC Data.Text.Internal.Text
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC Data.Text.Internal.Lazy.Text
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC a => Data.Text.Prettyprint.Doc.Minicute.PrettyMC [a]
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC a => Data.Text.Prettyprint.Doc.Minicute.PrettyMC (GHC.Maybe.Maybe a)
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC a => Data.Text.Prettyprint.Doc.Minicute.PrettyMC (Data.Functor.Identity.Identity a)
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC a => Data.Text.Prettyprint.Doc.Minicute.PrettyMC (GHC.Base.NonEmpty a)
instance (Data.Text.Prettyprint.Doc.Minicute.PrettyMC a1, Data.Text.Prettyprint.Doc.Minicute.PrettyMC a2) => Data.Text.Prettyprint.Doc.Minicute.PrettyMC (a1, a2)
instance (Data.Text.Prettyprint.Doc.Minicute.PrettyMC a1, Data.Text.Prettyprint.Doc.Minicute.PrettyMC a2, Data.Text.Prettyprint.Doc.Minicute.PrettyMC a3) => Data.Text.Prettyprint.Doc.Minicute.PrettyMC (a1, a2, a3)
instance Data.Text.Prettyprint.Doc.Minicute.PrettyMC a => Data.Text.Prettyprint.Doc.Minicute.PrettyMC (Data.Functor.Const.Const a b)
